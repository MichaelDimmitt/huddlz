defmodule Huddlz.Repo.Migrations.UpdateHuddlResource do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    alter table(:huddlz) do
      remove :host_id
      remove :status
      modify :group_id, :uuid, null: false
      modify :ends_at, :utc_datetime, null: false
      add :event_type, :text, null: false, default: "in_person"
      add :physical_location, :text
      add :virtual_link, :text
      add :is_private, :boolean, null: false, default: false
      add :rsvp_count, :bigint, null: false, default: 0

      add :creator_id,
          references(:users,
            column: :id,
            name: "huddlz_creator_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    drop_if_exists unique_index(:huddlz, [:host_id, :title],
                     name: "huddlz_unique_title_per_host_index"
                   )

    create unique_index(:huddlz, [:creator_id, :title],
             name: "huddlz_unique_title_per_creator_index"
           )
  end

  def down do
    drop_if_exists unique_index(:huddlz, [:creator_id, :title],
                     name: "huddlz_unique_title_per_creator_index"
                   )

    create unique_index(:huddlz, [:host_id, :title], name: "huddlz_unique_title_per_host_index")

    drop constraint(:huddlz, "huddlz_creator_id_fkey")

    alter table(:huddlz) do
      remove :creator_id
      remove :rsvp_count
      remove :is_private
      remove :virtual_link
      remove :physical_location
      remove :event_type
      modify :ends_at, :utc_datetime, null: true
      modify :group_id, :uuid, null: true
      add :status, :text, null: false, default: "upcoming"

      add :host_id,
          references(:users,
            column: :id,
            name: "huddlz_host_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end
  end
end
